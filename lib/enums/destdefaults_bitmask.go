// Code generated by "bitmasker -type DestDefaults"; DO NOT EDIT.

package enums

import "strconv"

// Has returns TRUE if the given flag is present in the bitmask
func (i DestDefaults) Has(m DestDefaults) bool {
	return i&m != 0
}

// Set returns the bitmask with the given flag set
func (i DestDefaults) Set(m DestDefaults) DestDefaults {
	return i | m
}

// Clear returns the bitmask with the given flag removed
func (i DestDefaults) Clear(m DestDefaults) DestDefaults {
	return i &^ m
}

// Toggle returns the bitmask with the given flag toggled
func (i DestDefaults) Toggle(m DestDefaults) DestDefaults {
	return i ^ m
}

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEST_DEFAULT_MOTION-1]
	_ = x[DEST_DEFAULT_HIGHLIGHT-2]
	_ = x[DEST_DEFAULT_DROP-4]
	_ = x[DEST_DEFAULT_ALL-0]
}

const (
	_DestDefaults_name_0 = "DEST_DEFAULT_ALLDEST_DEFAULT_MOTIONDEST_DEFAULT_HIGHLIGHT"
	_DestDefaults_name_1 = "DEST_DEFAULT_DROP"
)

var (
	_DestDefaults_index_0 = [...]uint8{0, 16, 35, 57}
)

func (i DestDefaults) String() string {
	switch {
	case i <= 2:
		return _DestDefaults_name_0[_DestDefaults_index_0[i]:_DestDefaults_index_0[i+1]]
	case i == 4:
		return _DestDefaults_name_1
	default:
		return "DestDefaults(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
